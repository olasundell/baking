buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//		classpath 'se.transmode.gradle:gradle-docker:1.2'
		classpath 'org.sgornostal:gradle-docker-plugin:1.5.3'
	}
}

plugins {
	id "com.zoltu.git-versioning" version "3.0.3"
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'com.zoltu.git-versioning'

	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	ext {
		springCloudVersion = 'Dalston.SR4'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	if (!it.name.equals('common')) {
		apply plugin: 'docker'

		dependencies {
			compile('org.springframework.cloud:spring-cloud-starter-zipkin')
		}

//		task buildDocker(unit: Docker, dependsOn: bootRepackage) {
//			push = true
//			applicationName = jar.baseName
//			dockerfile = file('Dockerfile')
//			doFirst {
//				copy {
//					from jar
//					into stageDir
//				}
//			}
//		}

		dockerRegistries {
			reg {
				url = '192.168.99.101:80'
				email = 'email@email.com'
				username = 'user'
				password = 'pwd'
			}
			man {
				url = '192.168.99.101:80'
				email = 'email@email.com'
				username = 'user'
				password = 'pwd'
			}
		}

		docker {
			println ZoltuGitVersioning.versionInfo
			println jar.archivePath

			dependsOn bootRepackage
			imageName = jar.baseName
			buildArgs = ['JAR_NAME': jar.archiveName ]
			files jar.archivePath
			host 'tcp://192.168.99.101:2376'
		}
	}

	dependencies {
		compileOnly group: 'org.projectlombok', name: 'lombok'
		compile('org.springframework.boot:spring-boot-starter-actuator')
//		compile('org.springframework.cloud:spring-cloud-starter-bus-kafka')
		compile('org.springframework.cloud:spring-cloud-starter-eureka')
		compile('org.springframework.cloud:spring-cloud-starter-feign')
		compile('org.springframework.cloud:spring-cloud-starter-hystrix')
		compile('org.springframework.cloud:spring-cloud-starter-hystrix-dashboard')
		compile('org.springframework.cloud:spring-cloud-starter-ribbon')
//		compile('org.springframework.cloud:spring-cloud-starter-sleuth')
//		compile('org.springframework.cloud:spring-cloud-starter-zookeeper-config')
//		compile('org.springframework.cloud:spring-cloud-starter-zookeeper-discovery')
//		compile('org.springframework.cloud:spring-cloud-starter-zuul')
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.springframework.boot:spring-boot-starter-undertow')
//		runtime('io.zipkin.java:zipkin-autoconfigure-ui')
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.3.1'
	distributionType = Wrapper.DistributionType.ALL
}
