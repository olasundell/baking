buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'

	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	ext {
		springCloudVersion = 'Dalston.SR3'
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	if (!it.name.equals('common')) {
		dependencies {
			compile('org.springframework.cloud:spring-cloud-starter-zipkin')
		}
	}

	dependencies {
		compileOnly group: 'org.projectlombok', name: 'lombok'
		compile('org.springframework.boot:spring-boot-starter-actuator')
//		compile('org.springframework.cloud:spring-cloud-starter-bus-kafka')
		compile('org.springframework.cloud:spring-cloud-starter-eureka')
		compile('org.springframework.cloud:spring-cloud-starter-feign')
		compile('org.springframework.cloud:spring-cloud-starter-hystrix')
		compile('org.springframework.cloud:spring-cloud-starter-hystrix-dashboard')
		compile('org.springframework.cloud:spring-cloud-starter-ribbon')
//		compile('org.springframework.cloud:spring-cloud-starter-sleuth')
//		compile('org.springframework.cloud:spring-cloud-starter-zookeeper-config')
//		compile('org.springframework.cloud:spring-cloud-starter-zookeeper-discovery')
//		compile('org.springframework.cloud:spring-cloud-starter-zuul')
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.springframework.boot:spring-boot-starter-undertow')
//		runtime('io.zipkin.java:zipkin-autoconfigure-ui')
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.2'
	distributionType = Wrapper.DistributionType.ALL
}
